# -*- coding: utf-8 -*-
"""DecisionTreeClassification

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nrw1QZIrJPgEvRSAt01L63ws6noU97r1
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import OneHotEncoder

dataset=pd.read_csv("heart.csv")

dataset.info()

x = dataset.drop('HeartDisease', axis=1)
y = dataset['HeartDisease']

from sklearn.compose import make_column_transformer
from sklearn.preprocessing import OneHotEncoder, LabelEncoder
from sklearn.preprocessing import StandardScaler

numeric_features = ['Age', 'RestingBP', 'Cholesterol', 'MaxHR', 'Oldpeak']
categorical_features = ['Sex', 'ChestPainType', 'RestingECG', 'ExerciseAngina', 'ST_Slope']

column_trans = make_column_transformer(
    (StandardScaler(), numeric_features),
    (OneHotEncoder(), categorical_features))

x=column_trans.fit_transform(x)
print(x.shape)

encoder = column_trans.named_transformers_['onehotencoder']
print(encoder.categories_)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=42)

from sklearn.tree import DecisionTreeClassifier
model = DecisionTreeClassifier(
    criterion='gini',          # 'entropy' yerine 'gini' daha iyi sonuç verebilir
    max_depth=4,               # Daha sığ bir ağaç (aşırı öğrenmeyi önler)
    min_samples_split=20,      # Daha yüksek değer = daha genel model
    min_samples_leaf=10,       # Yaprak düğümlerde minimum örnek sayısı
    max_features=None,         # Tüm özellikleri kullan
    random_state=42            # Tekrarlanabilirlik
)

model.fit(x_train,y_train)

predict_DTC=model.predict(x_test)
# DTC= DECISION TREE CLASSIFIEER

model.score(x_train,y_train)

model.score(x_test,y_test)

from sklearn.metrics import accuracy_score, confusion_matrix
print("Confisuon:", confusion_matrix(y_true= y_test,y_pred= predict_DTC))
print("Accuracy:", accuracy_score(y_true= y_test,y_pred= predict_DTC))

from sklearn import tree
feature_names = [
    'Age',
    'RestingBP',
    'Cholesterol',
    'MaxHR',
    'Oldpeak',
    'Sex_F',
    'Sex_M',
    'ChestPainType_ASY',
    'ChestPainType_ATA',
    'ChestPainType_NAP',
    'ChestPainType_TA',
    'RestingECG_LVH',
    'RestingECG_Normal',
    'RestingECG_ST',
    'ExerciseAngina_N',
    'ExerciseAngina_Y',
    'ST_Slope_Down',
    'ST_Slope_Flat',
    'ST_Slope_Up'
]
text_representation= tree.export_text(model,feature_names=feature_names)
print(text_representation)